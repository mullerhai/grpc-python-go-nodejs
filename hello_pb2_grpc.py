# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import hello_pb2 as hello__pb2


class HelloWorldStub(object):
  """
  Returns a greeting for the given person optionally including a custom message.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/com.zh.all.HelloWorld/SayHello',
        request_serializer=hello__pb2.ToBeGreeted.SerializeToString,
        response_deserializer=hello__pb2.Greeting.FromString,
        )


class HelloWorldServicer(object):
  """
  Returns a greeting for the given person optionally including a custom message.
  """

  def SayHello(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HelloWorldServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': grpc.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=hello__pb2.ToBeGreeted.FromString,
          response_serializer=hello__pb2.Greeting.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'com.zh.all.HelloWorld', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
